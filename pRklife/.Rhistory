artist_data$Artist %in% artist_groupings[[gp]],
gp, artist_data$Artist.Group)
}
artist_data_grouped <- artist_data %>%
group_by(Artist.Group) %>%
summarise(total_plays=sum(total_plays),
pct_plays=sum(total_plays)/total.plays,
total_tracks=sum(total_tracks),
pct_tracks=sum(total_tracks)/total.tracks,
minutes_played=sum(minutes_played)) %>%
arrange(-minutes_played) %>%
rename(Artist = Artist.Group)
artist_data_grouped
}
get_spotifyish_summary_long <- function(track_data, artist_data){
total.plays <- sum(track_data$Play.Count)
total.tracks <- nrow(track_data)
total.minutes <- sum(track_data$Play.Count*(track_data$Total.Time/(60*1000)))
# Copy Spotify's end-of-year wrap-up info
spotifyish_summary <- list(
diff_songs = total.tracks,
minutes_listening = floor(total.minutes),
top_artist = artist_data %>% arrange(-minutes_played) %>% pull(Artist) %>% .[1],
hours_spent_w_top_artist = floor(max(artist_data$minutes_played)/60),
top_5_artists = artist_data %>% arrange(-minutes_played) %>% pull(Artist) %>% .[1:5],
top_5_songs = track_data %>%
arrange(-Play.Count) %>%
select(Name, Artist) %>%
.[1:5,],
top_genre = track_data %>%
group_by(Genre) %>%
summarise(minutes_played=sum(Play.Count*Total.Time/(60*1000))) %>%
arrange(-minutes_played) %>% select(Genre) %>% .[1,]
)
cat(paste("This year you listened to", spotifyish_summary$diff_songs, "different songs in iTunes",
"\nYou spent", spotifyish_summary$minutes_listening, "minutes listening this year",
"\nYou spent", spotifyish_summary$hours_spent_w_top_artist, "hours with your favourite artist",
spotifyish_summary$top_artist,
"\nTop Artists: \n", paste0(spotifyish_summary$top_5_artists, collapse="\n "),
"\nTop Songs: \n", paste0(paste0(spotifyish_summary$top_5_songs$Name, ", ",
spotifyish_summary$top_5_songs$Artist),
collapse="\n ")))
}
get_spotifyish_summary_short <- function(track_data, artist_data){
total.minutes <- sum(track_data$Play.Count*(track_data$Total.Time/(60*1000)))
# Copy Spotify's end-of-year wrap-up info
spotifyish_summary <- list(
minutes_listening = floor(total.minutes),
top_5_artists = artist_data %>% arrange(-minutes_played) %>% pull(Artist) %>% .[1:5],
top_5_songs = track_data %>%
arrange(-Play.Count) %>%
select(Name, Artist) %>%
.[1:5,],
top_genre = track_data %>%
group_by(Genre) %>%
summarise(minutes_played=sum(Play.Count*Total.Time/(60*1000))) %>%
arrange(-minutes_played) %>% select(Genre) %>% .[1,]
)
cat(paste("Minutes Listened \n",
spotifyish_summary$minutes_listening,
"\nTop Genre \n",
spotifyish_summary$top_genre,
"\nTop Artists: \n", paste0(spotifyish_summary$top_5_artists, collapse="\n "),
"\nTop Songs: \n", paste0(paste0(spotifyish_summary$top_5_songs$Name, ", ",
spotifyish_summary$top_5_songs$Artist),
collapse="\n ")))
}
plays.by.artist <- summarise_by_artist(songs.played)
get_spotifyish_summary_long(songs.played, plays.by.artist)
get_spotifyish_summary_short(songs.played, plays.by.artist)
# These mappings are v tailored to my listening habits--for general use
# maybe better to upload a personalized mapping file or something
artist_groupings <- list(
'Oasis (& offshoots)' = c('Oasis', 'Beady Eye', 'Noel Gallagher\'s High Flying Birds',
'Liam Gallagher'),
'Blur (& offshoots)' = c('Blur', 'Gorillaz', 'Damon Albarn',
'The Good, The Bad & The Queen', 'Graham Coxon', 'Fat Les'),
'The Beatles (& offshoots)' = c('The Beatles', 'Paul McCartney', 'Wings',
'John Lennon', 'George Harrison'),
'The Smiths (& offshoots)' = c('The Smiths', 'Morrissey', 'Johnny Marr'),
'Led Zeppelin (& offshoots)' = c('Led Zeppelin', 'Robert Plant'),
'Talking Heads (& offshoots)' = c('Talking Heads', 'David Byrne'),
'The Who (& offshoots)' = c('The Who', 'Roger Daltrey', 'Pete Townshend', 'John Entwistle')
)
plays.by.artist.group <- summarise_by_artist_grouped(plays.by.artist, artist_groupings)
get_spotifyish_summary_long(songs.played, plays.by.artist.group)
get_spotifyish_summary_short(songs.played, plays.by.artist.group)
songs.played$Name <- as.character(songs.played$Name)
plays.by.artist <- summarise_by_artist(songs.played)
get_spotifyish_summary_long(songs.played, plays.by.artist)
rm(spotifyish_summary)
rm(spotifyish_summary_grouped)
gc()
get_spotifyish_summary_short(songs.played, plays.by.artist)
y <- .8
(.568 - .4*y)/.3
y <- .7
(.568 - .4*y)/.3
.4*.92 + .3*.94
.2/.3
# note: using dev version of this! certain aspects of code won't work with CRAN version
library(spotifyr)
library(dplyr)
library(ggplot2)
library(ggfortify)
library(FNN)
access_token <- get_spotify_access_token()
Sys.setenv(SPOTIFY_CLIENT_ID = .rs.askForPassword("Enter Spotify Client ID"))
Sys.setenv(SPOTIFY_CLIENT_SECRET = .rs.askForPassword("Enter Spotify Client Secret"))
my_username <- readline(prompt="Enter Spotify user ID:")
access_token <- get_spotify_access_token()
# Get song data
blur <- get_artist_audio_features('blur') %>%
mutate(artist='Blur')
graham <- get_artist_audio_features('graham coxon') %>%
mutate(artist='Graham Coxon')
damon <- get_artist_audio_features('damon albarn') %>%
mutate(artist='Damon Albarn')
gorillaz <- get_artist_audio_features('gorillaz') %>%
mutate(artist='Gorillaz')
gbq <- get_artist_audio_features('the good the bad and the queen') %>%
mutate(artist='The Good, The Bad & The Queen')
# Filter down to albums we want
blur <- filter(blur, album_name %in% c('13', 'Blur', 'Leisure',
'Modern Life Is Rubbish',
'Parklife', 'The Great Escape',
'The Magic Whip', 'Think Tank'))
# don't really want to deal with Dr Dee and Journey to the West bc..soundtracks?
damon <- filter(damon, album_name == 'Everyday Robots')
graham <- filter(graham, album_name != 'The End Of The F***ing World (Original Songs and Score)' )
gorillaz <- filter(gorillaz, album_name %in% c('Demon Days', 'Gorillaz', 'Humanz',
'The Fall', 'Plastic Beach', 'The Now Now'))
# Merge datasets
blur_and_co <- union(blur, graham) %>%
union(damon) %>%
union(gorillaz) %>%
union(gbq) %>%
select(artist, album_name, album_release_year, track_name, track_uri,
danceability, energy, speechiness, acousticness, instrumentalness,
liveness, valence,
key_mode, tempo)
# Get mappings from key to Camelot number
camelot <- read.csv("camelot_mappings.csv")
setwd("~/Coding Adventures/music-metadata")
# Get mappings from key to Camelot number
camelot <- read.csv("camelot_mappings.csv")
camelot$key_mode <- paste0(camelot$key, camelot$mode)
blur_and_co <- left_join(blur_and_co, camelot, by='key_mode')
numeric_features <- c('danceability', 'energy', 'speechiness',
'acousticness', 'instrumentalness',
'liveness', 'valence')
# Can we see any patterns here? idk
autoplot(prcomp(blur_and_co %>%
select(one_of(numeric_features))),
data = blur_and_co, colour = 'artist', size=2,
loadings=TRUE, loadings.label = TRUE, loadings.colour='black',
loadings.label.size = 3)
# Can we see any patterns here? idk
autoplot(prcomp(blur_and_co %>%
select(one_of(numeric_features))),
data = blur_and_co, colour = 'album_name', size=2,
loadings=TRUE, loadings.label = TRUE, loadings.colour='black',
loadings.label.size = 3)
song_1 <- blur_and_co[grep('Girls (and|&) Boys', blur_and_co$track_name, fixed=FALSE),]
?get.knnx
z <- get.knnx(song_1 %>% select(one_of(numeric_features)),
blur_and_co %>% select(one_of(numeric_features)))
z <- get.knnx(song_1 %>% select(one_of(numeric_features)),
blur_and_co %>% select(one_of(numeric_features)), k=10)
z <- get.knnx(query=song_1 %>% select(one_of(numeric_features)),
data=blur_and_co %>% select(one_of(numeric_features)), k=10)
blur_and_co[z$nn.index]
blur_and_co[z$nn.index,]
song_2 <- blur_and_co[grep('Song 2', blur_and_co$track_name, fixed=FALSE),]
z <- get.knnx(query=song_2 %>% select(one_of(numeric_features)),
data=blur_and_co %>% select(one_of(numeric_features)), k=10)
z
blur_and_co[z$nn.index,]
View(blur)
View(gorillaz)
# Get song data
blur <- get_artist_audio_features('blur') %>%
mutate(artist='Blur')
graham <- get_artist_audio_features('graham coxon') %>%
mutate(artist='Graham Coxon')
damon <- get_artist_audio_features('damon albarn') %>%
mutate(artist='Damon Albarn')
gorillaz <- get_artist_audio_features('gorillaz') %>%
mutate(artist='Gorillaz')
gbq <- get_artist_audio_features('the good the bad and the queen') %>%
mutate(artist='The Good, The Bad & The Queen')
# Merge datasets
blur_and_co <- union(blur, graham) %>%
union(damon) %>%
union(gorillaz) %>%
union(gbq)
View(blur_and_co)
# Get mappings from key to Camelot number
camelot <- read.csv("camelot_mappings.csv")
camelot$key_mode <- paste0(camelot$key, camelot$mode)
blur_and_co <- left_join(blur_and_co, camelot, by='key_mode')
fat_les <- get_artist_audio_features('fat les') %>%
mutate(artist='Fat Les')
# note: using dev version of this! certain aspects of code won't work with CRAN version
get_full_blur_data <- function(){
require(spotifyr)
require(dplyr)
Sys.setenv(SPOTIFY_CLIENT_ID = .rs.askForPassword("Enter Spotify Client ID"))
Sys.setenv(SPOTIFY_CLIENT_SECRET = .rs.askForPassword("Enter Spotify Client Secret"))
access_token <- get_spotify_access_token()
# Get song data
blur <- get_artist_audio_features('blur') %>%
mutate(artist='Blur')
graham <- get_artist_audio_features('graham coxon') %>%
mutate(artist='Graham Coxon')
damon <- get_artist_audio_features('damon albarn') %>%
mutate(artist='Damon Albarn')
gorillaz <- get_artist_audio_features('gorillaz') %>%
mutate(artist='Gorillaz')
gbq <- get_artist_audio_features('the good the bad and the queen') %>%
mutate(artist='The Good, The Bad & The Queen')
# Merge datasets
blur_and_co <- union(blur, graham) %>%
union(damon) %>%
union(gorillaz) %>%
union(gbq)
blur_and_co
}
blur_data <- get_full_blur_data()
write.csv(blur_data, row.names = FALSE, file="blur_and_co_spotify_data.csv")
View(blur_data)
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
View(blur_data)
grep("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name)
grep("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed = FALSE)
grep("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed = TRUE)
?grep
grep("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,",
blur_data$track_name, fixed = TRUE)
grep("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,",
blur_data$track_name, fixed = FALSE)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
View(blur_data)
unique(blur_data$album_name)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
my_fave_songs <- c('Girls and Boys', 'Song 2', 'Parklife', 'Jubilee', 'Top Man')
blur_data <- filter(artist=='Blur' & track_name %in% my_fave_songs)
blur_data <- filter(artist_name=='Blur' & track_name %in% my_fave_songs)
blur_data <- filter(blur_data, artist=='Blur' & track_name %in% my_fave_songs)
View(blur_data)
blur_data <- read.csv("blur_and_co_spotify_data.csv")
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
my_fave_songs <- c('Girls and Boys', 'Song 2', 'Parklife', 'Jubilee', 'Top Man')
grab_songs <- filter(blur_data, artist=='Blur' & track_name %in% my_fave_songs)
shiny::runApp('pRklife/pRklife')
state.name
runApp('pRklife/pRklife')
?selectizeInput
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
setwd("~/Coding Adventures/music-metadata/pRklife")
blur_data <- read.csv("data/blur_and_co_spotify_data.csv")
runApp()
runApp()
runApp()
?shinyUI
?shinyServer
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
blur_data <- read.csv("data/blur_and_co_spotify_data.csv")
blur_songs <- blur_data %>% filter(artist=='BLur') %>% select(track_name)
blur_songs <- blur_data %>% filter(artist=='Blur') %>% select(track_name)
View(blur_songs)
blur_songs <- blur_data %>% filter(artist=='Blur') %>% select(track_name) %>% as.character()
?read.csv
blur_data <- read.csv("data/blur_and_co_spotify_data.csv", stringsAsFactors=FALSE)
blur_songs <- blur_data %>% filter(artist=='Blur') %>% select(track_name)
print(head(blur_songs))
runApp()
runApp()
print(head(blur_songs))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
get_n_closest_songs <- function(song, song_set, n, features){
require(FNN)
indices <- get.knnx(song_set %>% select(one_of(features)),
song %>% select(one_of(features)),
n)
song_set[indices,]
}
blur_data <- read.csv("blur_and_co_spotify_data.csv")
setwd("~/Coding Adventures/music-metadata")
blur_data <- read.csv("blur_and_co_spotify_data.csv")
blur_data <- process_blur_data(blur_data)
my_fave_songs <- c('Girls and Boys', 'Song 2', 'Parklife', 'Jubilee', 'Top Man')
grab_songs <- filter(blur_data, artist=='Blur' & track_name %in% my_fave_songs)
?sapply
numeric_features <- c('danceability', 'energy', 'speechiness',
'acousticness', 'instrumentalness',
'liveness', 'valence')
z <- get_n_closest_songs(grab_songs, blur_data %>% filter(artist != 'Blur'),
10, numeric_features)
z <- get_n_closest_songs(grab_songs[1,], blur_data %>% filter(artist != 'Blur'),
10, numeric_features)
get.knnx(blur_data %>% select(one_of(numeric_features)),
grab_songs[1,] %>% select(one_of(numeric_features)),
10)
grab_songs[1,] %>% select(one_of(numeric_features))
blur_data %>% select(one_of(numeric_features)) %>% head()
blur_data %>% select(one_of(numeric_features))
blur_data[128,]
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin',
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
blur_data <- process_blur_data(blur_data)
get.knnx(blur_data %>% select(one_of(numeric_features)),
grab_songs[1,] %>% select(one_of(numeric_features)),
10)
get_n_closest_songs <- function(song, song_set, n, features){
require(FNN)
indices <- get.knnx(song_set %>% select(one_of(features)),
song %>% select(one_of(features)),
n)$nn.index
song_set[indices,]
}
z <- get_n_closest_songs(song=grab_songs[1,],
song_set=blur_data %>% filter(artist != 'Blur'),
10, numeric_features)
z
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
blur_data$track_name <- gsub(" (feat. .*)", "", blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin', 'D-Sides'
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
blur_data$track_name <- gsub(" (feat. .*)", "", blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin', 'D-Sides'
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
blur_data$track_name <- gsub(" (feat. .*)", "", blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin', 'D-Sides'
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
# blur_data$track_name <- gsub(" (feat. .*)", "", blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin', 'D-Sides'
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
blur_data$track_name <- gsub(" (feat. .*)", "", blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin', 'D-Sides',
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
blur_data <- read.csv("blur_and_co_spotify_data.csv")
blur_data <- process_blur_data(blur_data)
View(blur_data)
grep(" (feat. .*)", "", blur_data$track_name, fixed=FALSE)
grep(" (feat. [.]*)", "", blur_data$track_name, fixed=FALSE)
grep(" \(feat. [.]*\)", "", blur_data$track_name, fixed=FALSE)
grep(" (feat. [a-z A-Z]*)", "", blur_data$track_name, fixed=FALSE)
grep(" (feat" , blur_data$track_name, fixed=FALSE)
grep(" \(feat" , blur_data$track_name, fixed=FALSE)
?grep
grep("feat" , blur_data$track_name, fixed=FALSE)
blur_data$track_name[grep("feat" , blur_data$track_name, fixed=FALSE)]
blur_data$track_name[grep("(feat" , blur_data$track_name, fixed=FALSE)]
blur_data$track_name[grep("\(feat" , blur_data$track_name, fixed=FALSE)]
blur_data$track_name[grep("\\(feat" , blur_data$track_name, fixed=FALSE)]
blur_data$track_name[grep("\\(feat. .*\\)" , blur_data$track_name, fixed=FALSE)]
blur_data$track_name[grep(" \\(feat. .*\\)" , blur_data$track_name, fixed=FALSE)]
process_blur_data <- function(blur_data){
blur_data$track_name <- gsub(" - 2012 Remastered Version", "", blur_data$track_name)
blur_data$track_name <- gsub("Damon Albarn: Dr Dee, An English Opera: No. [0-9]*,", "",
blur_data$track_name, fixed=FALSE)
blur_data$track_name <- gsub(" \\(feat. .*\\)", "", blur_data$track_name, fixed=FALSE)
albums_to_exclude <- c('Dr Dee [Album Sampler]', 'Laika Come Home',
'All The People... Blur Live At Hyde Park 02/07/2009',
'All The People... Blur Live At Hyde Park 03/07/2009',
'Bustin + Dronin', 'D-Sides',
'Parklive', 'Demon Days Live At The Manchester Opera House')
blur_data <- filter(blur_data, !(album_name %in% albums_to_exclude))
blur_data
}
blur_data <- read.csv("blur_and_co_spotify_data.csv")
blur_data <- process_blur_data(blur_data)
blur_data$track_name[grep("\\(feat. .*\\)" , blur_data$track_name, fixed=FALSE)]
my_fave_songs <- c('Girls and Boys', 'Song 2', 'Parklife', 'Jubilee', 'Top Man')
grab_songs <- filter(blur_data, artist=='Blur' & track_name %in% my_fave_songs)
numeric_features <- c('danceability', 'energy', 'speechiness',
'acousticness', 'instrumentalness',
'liveness', 'valence')
z <- get_n_closest_songs(song=grab_songs[1,],
song_set=blur_data %>% filter(artist != 'Blur'),
10, numeric_features)
z
z$track_name
z <- get_n_closest_songs(song=grab_songs,
song_set=blur_data %>% filter(artist != 'Blur'),
10, numeric_features)
z
View(z)
unique(z)
dim(unique(z))
recs <- get_n_closest_songs(song=grab_songs,
song_set=blur_data %>% filter(artist != 'Blur'),
10, numeric_features) %>%
unique
View(recs)
runApp('pRklife')
runApp('pRklife')
?tableOutput
runApp('pRklife')
install.packages('shinyAlert')
install.packages('shinyalert')
library(shinyalert)
?shinyalert
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
runApp('pRklife')
camelot <- read.csv("data/camelot_mappings.csv")
runApp('pRklife')
runApp('pRklife')
